version: '3.8'

services:
  # Frontend React Application
  frontend:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:5000
    networks:
      - app-network
    restart: unless-stopped

  # Backend Node.js API
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - database
      - redis
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=dockermastery
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FRONTEND_URL=http://frontend:3000
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL Database
  database:
    build: ./database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=dockermastery
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Redis Cache
  redis:
    build: ./redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge